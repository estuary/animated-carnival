-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

-- DOMAIN: public.jsonb_internationalized_value

-- DROP DOMAIN IF EXISTS public.jsonb_internationalized_value;

CREATE DOMAIN public.jsonb_internationalized_value
    AS jsonb;

ALTER DOMAIN public.jsonb_internationalized_value OWNER TO postgres;

ALTER DOMAIN public.jsonb_internationalized_value
    ADD CONSTRAINT jsonb_internationalized_value_check CHECK (VALUE IS NULL OR jsonb_typeof(VALUE) = 'object'::text AND (VALUE -> 'en-US'::text) IS NOT NULL);

COMMENT ON DOMAIN public.jsonb_internationalized_value
    IS 'jsonb_internationalized_value is JSONB object which is required to at least have en-US internationalized values';
CREATE OR REPLACE FUNCTION public.generate_opengraph_value(
	opengraph_raw jsonb,
	opengraph_patch jsonb,
	field text)
    RETURNS jsonb_internationalized_value
    LANGUAGE 'plpgsql'
    COST 100
    IMMUTABLE PARALLEL UNSAFE
AS $BODY$
BEGIN
    RETURN json_build_object('en-US',internal.jsonb_merge_patch(opengraph_raw, opengraph_patch) #>> ('{"en-US", "'|| field ||'"}')::text[]);
END
$BODY$;

alter function public.generate_opengraph_value(jsonb, jsonb, text) owner to authenticated;


ALTER TABLE IF EXISTS public.connectors
    ADD COLUMN short_description jsonb_internationalized_value GENERATED ALWAYS AS (generate_opengraph_value((open_graph_raw)::jsonb, (open_graph_patch)::jsonb, 'description'::text)) STORED;

COMMENT ON COLUMN public.connectors.short_description
    IS 'A short description of this connector, at most a few sentences. Represented as a json object with IETF language tags as keys (https://en.wikipedia.org/wiki/IETF_language_tag), and the description string as values';

ALTER TABLE IF EXISTS public.connectors
    ADD COLUMN title jsonb_internationalized_value GENERATED ALWAYS AS (generate_opengraph_value((open_graph_raw)::jsonb, (open_graph_patch)::jsonb, 'title'::text)) STORED;

COMMENT ON COLUMN public.connectors.title
    IS 'The title of this connector. Represented as a json object with IETF language tags as keys (https://en.wikipedia.org/wiki/IETF_language_tag), and the title string as values';

ALTER TABLE IF EXISTS public.connectors
    ADD COLUMN logo_url jsonb_internationalized_value GENERATED ALWAYS AS (generate_opengraph_value((open_graph_raw)::jsonb, (open_graph_patch)::jsonb, 'image'::text)) STORED;

COMMENT ON COLUMN public.connectors.logo_url
    IS 'The url for this connector''s logo image. Represented as a json object with IETF language tags as keys (https://en.wikipedia.org/wiki/IETF_language_tag), and urls as values';

ALTER TABLE IF EXISTS public.connectors
    ADD COLUMN recommended boolean NOT NULL GENERATED ALWAYS AS (
CASE
    WHEN (((internal.jsonb_merge_patch((open_graph_raw)::jsonb, (open_graph_patch)::jsonb) -> 'en-US'::text) ->> 'recommended'::text) = 'True'::text) THEN true
    ELSE false
END) STORED;

-- Changing the columns in a view requires dropping and re-creating the view.
-- This may fail if other objects are dependent upon this view,
-- or may cause procedural functions to fail if they are not modified to
-- take account of the changes.
DROP VIEW public.live_specs_ext;
CREATE OR REPLACE VIEW public.live_specs_ext
    AS
     SELECT l.created_at,
    l.detail,
    l.id,
    l.updated_at,
    l.catalog_name,
    l.connector_image_name,
    l.connector_image_tag,
    l.last_build_id,
    l.last_pub_id,
    l.reads_from,
    l.spec,
    l.spec_type,
    l.writes_to,
    c.external_url AS connector_external_url,
    c.id AS connector_id,
    c.open_graph AS connector_open_graph,
    c.title AS connector_title,
    c.short_description AS connector_short_description,
    c.logo_url AS connector_logo_url,
    c.recommended AS connector_recommended,
    t.id AS connector_tag_id,
    t.documentation_url AS connector_tag_documentation_url,
    p.detail AS last_pub_detail,
    p.user_id AS last_pub_user_id,
    u.avatar_url AS last_pub_user_avatar_url,
    u.email AS last_pub_user_email,
    u.full_name AS last_pub_user_full_name
   FROM live_specs l
     LEFT JOIN publication_specs p ON l.id::macaddr8 = p.live_spec_id::macaddr8 AND l.last_pub_id::macaddr8 = p.pub_id::macaddr8
     LEFT JOIN connectors c ON c.image_name = l.connector_image_name
     LEFT JOIN connector_tags t ON c.id::macaddr8 = t.connector_id::macaddr8 AND l.connector_image_tag = t.image_tag,
    LATERAL view_user_profile(p.user_id) u(user_id, email, full_name, avatar_url);
COMMENT ON VIEW public.live_specs_ext
    IS 'View of `live_specs` extended with metadata of its last publication';

alter view public.live_specs_ext owner to authenticated;


